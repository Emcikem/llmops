<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.emcikem.llm.dao.example.LlmOpsChatHistoryDOMapper">
  <resultMap id="BaseResultMap" type="com.emcikem.llm.dao.entity.LlmOpsChatHistoryDO">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="role" jdbcType="TINYINT" property="role" />
    <result column="tenant" jdbcType="VARCHAR" property="tenant" />
    <result column="token" jdbcType="BIGINT" property="token" />
    <result column="creator" jdbcType="VARCHAR" property="creator" />
    <result column="operator" jdbcType="VARCHAR" property="operator" />
    <result column="ctime" jdbcType="TIMESTAMP" property="ctime" />
    <result column="utime" jdbcType="TIMESTAMP" property="utime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.emcikem.llm.dao.entity.LlmOpsChatHistoryDO">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, role, tenant, token, creator, operator, ctime, utime
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.emcikem.llm.dao.entity.LlmOpsChatHistoryDOExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from llmops_chat_history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.emcikem.llm.dao.entity.LlmOpsChatHistoryDOExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from llmops_chat_history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from llmops_chat_history
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from llmops_chat_history
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.emcikem.llm.dao.entity.LlmOpsChatHistoryDOExample">
    delete from llmops_chat_history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.emcikem.llm.dao.entity.LlmOpsChatHistoryDO">
    insert into llmops_chat_history (id, role, tenant, 
      token, creator, operator, 
      ctime, utime, content
      )
    values (#{id,jdbcType=BIGINT}, #{role,jdbcType=TINYINT}, #{tenant,jdbcType=VARCHAR}, 
      #{token,jdbcType=BIGINT}, #{creator,jdbcType=VARCHAR}, #{operator,jdbcType=VARCHAR}, 
      #{ctime,jdbcType=TIMESTAMP}, #{utime,jdbcType=TIMESTAMP}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.emcikem.llm.dao.entity.LlmOpsChatHistoryDO">
    insert into llmops_chat_history
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="role != null">
        role,
      </if>
      <if test="tenant != null">
        tenant,
      </if>
      <if test="token != null">
        token,
      </if>
      <if test="creator != null">
        creator,
      </if>
      <if test="operator != null">
        operator,
      </if>
      <if test="ctime != null">
        ctime,
      </if>
      <if test="utime != null">
        utime,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="role != null">
        #{role,jdbcType=TINYINT},
      </if>
      <if test="tenant != null">
        #{tenant,jdbcType=VARCHAR},
      </if>
      <if test="token != null">
        #{token,jdbcType=BIGINT},
      </if>
      <if test="creator != null">
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="operator != null">
        #{operator,jdbcType=VARCHAR},
      </if>
      <if test="ctime != null">
        #{ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="utime != null">
        #{utime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.emcikem.llm.dao.entity.LlmOpsChatHistoryDOExample" resultType="java.lang.Long">
    select count(*) from llmops_chat_history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update llmops_chat_history
    <set>
      <if test="row.id != null">
        id = #{row.id,jdbcType=BIGINT},
      </if>
      <if test="row.role != null">
        role = #{row.role,jdbcType=TINYINT},
      </if>
      <if test="row.tenant != null">
        tenant = #{row.tenant,jdbcType=VARCHAR},
      </if>
      <if test="row.token != null">
        token = #{row.token,jdbcType=BIGINT},
      </if>
      <if test="row.creator != null">
        creator = #{row.creator,jdbcType=VARCHAR},
      </if>
      <if test="row.operator != null">
        operator = #{row.operator,jdbcType=VARCHAR},
      </if>
      <if test="row.ctime != null">
        ctime = #{row.ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.utime != null">
        utime = #{row.utime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.content != null">
        content = #{row.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update llmops_chat_history
    set id = #{row.id,jdbcType=BIGINT},
      role = #{row.role,jdbcType=TINYINT},
      tenant = #{row.tenant,jdbcType=VARCHAR},
      token = #{row.token,jdbcType=BIGINT},
      creator = #{row.creator,jdbcType=VARCHAR},
      operator = #{row.operator,jdbcType=VARCHAR},
      ctime = #{row.ctime,jdbcType=TIMESTAMP},
      utime = #{row.utime,jdbcType=TIMESTAMP},
      content = #{row.content,jdbcType=LONGVARCHAR}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update llmops_chat_history
    set id = #{row.id,jdbcType=BIGINT},
      role = #{row.role,jdbcType=TINYINT},
      tenant = #{row.tenant,jdbcType=VARCHAR},
      token = #{row.token,jdbcType=BIGINT},
      creator = #{row.creator,jdbcType=VARCHAR},
      operator = #{row.operator,jdbcType=VARCHAR},
      ctime = #{row.ctime,jdbcType=TIMESTAMP},
      utime = #{row.utime,jdbcType=TIMESTAMP}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.emcikem.llm.dao.entity.LlmOpsChatHistoryDO">
    update llmops_chat_history
    <set>
      <if test="role != null">
        role = #{role,jdbcType=TINYINT},
      </if>
      <if test="tenant != null">
        tenant = #{tenant,jdbcType=VARCHAR},
      </if>
      <if test="token != null">
        token = #{token,jdbcType=BIGINT},
      </if>
      <if test="creator != null">
        creator = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="operator != null">
        operator = #{operator,jdbcType=VARCHAR},
      </if>
      <if test="ctime != null">
        ctime = #{ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="utime != null">
        utime = #{utime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.emcikem.llm.dao.entity.LlmOpsChatHistoryDO">
    update llmops_chat_history
    set role = #{role,jdbcType=TINYINT},
      tenant = #{tenant,jdbcType=VARCHAR},
      token = #{token,jdbcType=BIGINT},
      creator = #{creator,jdbcType=VARCHAR},
      operator = #{operator,jdbcType=VARCHAR},
      ctime = #{ctime,jdbcType=TIMESTAMP},
      utime = #{utime,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.emcikem.llm.dao.entity.LlmOpsChatHistoryDO">
    update llmops_chat_history
    set role = #{role,jdbcType=TINYINT},
      tenant = #{tenant,jdbcType=VARCHAR},
      token = #{token,jdbcType=BIGINT},
      creator = #{creator,jdbcType=VARCHAR},
      operator = #{operator,jdbcType=VARCHAR},
      ctime = #{ctime,jdbcType=TIMESTAMP},
      utime = #{utime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="com.emcikem.llm.dao.entity.LlmOpsChatHistoryDO">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="role" jdbcType="TINYINT" property="role" />
    <result column="tenant" jdbcType="VARCHAR" property="tenant" />
    <result column="token" jdbcType="BIGINT" property="token" />
    <result column="creator" jdbcType="VARCHAR" property="creator" />
    <result column="operator" jdbcType="VARCHAR" property="operator" />
    <result column="ctime" jdbcType="TIMESTAMP" property="ctime" />
    <result column="utime" jdbcType="TIMESTAMP" property="utime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.emcikem.llm.dao.entity.LlmOpsChatHistoryDO">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, role, tenant, token, creator, operator, ctime, utime
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.emcikem.llm.dao.entity.LlmOpsChatHistoryDOExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from llmops_chat_history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.emcikem.llm.dao.entity.LlmOpsChatHistoryDOExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from llmops_chat_history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from llmops_chat_history
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from llmops_chat_history
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.emcikem.llm.dao.entity.LlmOpsChatHistoryDOExample">
    delete from llmops_chat_history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.emcikem.llm.dao.entity.LlmOpsChatHistoryDO">
    insert into llmops_chat_history (id, role, tenant, 
      token, creator, operator, 
      ctime, utime, content
      )
    values (#{id,jdbcType=BIGINT}, #{role,jdbcType=TINYINT}, #{tenant,jdbcType=VARCHAR}, 
      #{token,jdbcType=BIGINT}, #{creator,jdbcType=VARCHAR}, #{operator,jdbcType=VARCHAR}, 
      #{ctime,jdbcType=TIMESTAMP}, #{utime,jdbcType=TIMESTAMP}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.emcikem.llm.dao.entity.LlmOpsChatHistoryDO">
    insert into llmops_chat_history
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="role != null">
        role,
      </if>
      <if test="tenant != null">
        tenant,
      </if>
      <if test="token != null">
        token,
      </if>
      <if test="creator != null">
        creator,
      </if>
      <if test="operator != null">
        operator,
      </if>
      <if test="ctime != null">
        ctime,
      </if>
      <if test="utime != null">
        utime,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="role != null">
        #{role,jdbcType=TINYINT},
      </if>
      <if test="tenant != null">
        #{tenant,jdbcType=VARCHAR},
      </if>
      <if test="token != null">
        #{token,jdbcType=BIGINT},
      </if>
      <if test="creator != null">
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="operator != null">
        #{operator,jdbcType=VARCHAR},
      </if>
      <if test="ctime != null">
        #{ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="utime != null">
        #{utime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.emcikem.llm.dao.entity.LlmOpsChatHistoryDOExample" resultType="java.lang.Long">
    select count(*) from llmops_chat_history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update llmops_chat_history
    <set>
      <if test="row.id != null">
        id = #{row.id,jdbcType=BIGINT},
      </if>
      <if test="row.role != null">
        role = #{row.role,jdbcType=TINYINT},
      </if>
      <if test="row.tenant != null">
        tenant = #{row.tenant,jdbcType=VARCHAR},
      </if>
      <if test="row.token != null">
        token = #{row.token,jdbcType=BIGINT},
      </if>
      <if test="row.creator != null">
        creator = #{row.creator,jdbcType=VARCHAR},
      </if>
      <if test="row.operator != null">
        operator = #{row.operator,jdbcType=VARCHAR},
      </if>
      <if test="row.ctime != null">
        ctime = #{row.ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.utime != null">
        utime = #{row.utime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.content != null">
        content = #{row.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update llmops_chat_history
    set id = #{row.id,jdbcType=BIGINT},
      role = #{row.role,jdbcType=TINYINT},
      tenant = #{row.tenant,jdbcType=VARCHAR},
      token = #{row.token,jdbcType=BIGINT},
      creator = #{row.creator,jdbcType=VARCHAR},
      operator = #{row.operator,jdbcType=VARCHAR},
      ctime = #{row.ctime,jdbcType=TIMESTAMP},
      utime = #{row.utime,jdbcType=TIMESTAMP},
      content = #{row.content,jdbcType=LONGVARCHAR}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update llmops_chat_history
    set id = #{row.id,jdbcType=BIGINT},
      role = #{row.role,jdbcType=TINYINT},
      tenant = #{row.tenant,jdbcType=VARCHAR},
      token = #{row.token,jdbcType=BIGINT},
      creator = #{row.creator,jdbcType=VARCHAR},
      operator = #{row.operator,jdbcType=VARCHAR},
      ctime = #{row.ctime,jdbcType=TIMESTAMP},
      utime = #{row.utime,jdbcType=TIMESTAMP}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.emcikem.llm.dao.entity.LlmOpsChatHistoryDO">
    update llmops_chat_history
    <set>
      <if test="role != null">
        role = #{role,jdbcType=TINYINT},
      </if>
      <if test="tenant != null">
        tenant = #{tenant,jdbcType=VARCHAR},
      </if>
      <if test="token != null">
        token = #{token,jdbcType=BIGINT},
      </if>
      <if test="creator != null">
        creator = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="operator != null">
        operator = #{operator,jdbcType=VARCHAR},
      </if>
      <if test="ctime != null">
        ctime = #{ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="utime != null">
        utime = #{utime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.emcikem.llm.dao.entity.LlmOpsChatHistoryDO">
    update llmops_chat_history
    set role = #{role,jdbcType=TINYINT},
      tenant = #{tenant,jdbcType=VARCHAR},
      token = #{token,jdbcType=BIGINT},
      creator = #{creator,jdbcType=VARCHAR},
      operator = #{operator,jdbcType=VARCHAR},
      ctime = #{ctime,jdbcType=TIMESTAMP},
      utime = #{utime,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.emcikem.llm.dao.entity.LlmOpsChatHistoryDO">
    update llmops_chat_history
    set role = #{role,jdbcType=TINYINT},
      tenant = #{tenant,jdbcType=VARCHAR},
      token = #{token,jdbcType=BIGINT},
      creator = #{creator,jdbcType=VARCHAR},
      operator = #{operator,jdbcType=VARCHAR},
      ctime = #{ctime,jdbcType=TIMESTAMP},
      utime = #{utime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
    <select id="selectById" resultType="com.emcikem.llm.dao.entity.LlmOpsChatHistoryDO">
        SELECT * FROM llmops_chat_history WHERE id = #{id}
    </select>
</mapper>